import pytest

from Task import Task
from TodoViewer import TodoViewer


@pytest.fixture
def viewer():
    return TodoViewer()

def test_viewer_show_tasks(viewer, capsys):
    tasks = [Task("–¢–µ—Å—Ç–æ–≤–∞—è"), Task("–ï—â–µ –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞")]

    viewer.show_tasks(tasks)
    captured = capsys.readouterr()
    assert "–¢–µ—Å—Ç–æ–≤–∞—è" in captured.out
    assert "–ï—â–µ –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞" in captured.out

def test_viewer_show_empty_list(viewer, capsys):
    viewer.show_tasks([])
    captured = capsys.readouterr()
    assert "üìã –í —Å–ø–∏—Å–∫–µ –Ω–µ—Ç –∑–∞–¥–∞—á. –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –∑–∞–¥–∞—á—É." in captured.out

def test_viewer_show_incomplete_tasks(viewer, capsys):
    tasks = [Task("–¢–µ—Å—Ç–æ–≤–∞—è"), Task("–ï—â–µ –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞"), Task("–ü–æ—Å–ª–µ–¥–Ω—è—è")]
    Task.mark_completed(tasks[1])
    viewer.show_tasks_uncompleted(tasks)
    captured = capsys.readouterr()
    assert "–¢–µ—Å—Ç–æ–≤–∞—è" in captured.out
    assert "–ü–æ—Å–ª–µ–¥–Ω—è—è" in captured.out

def test_viewer_show_empty_incomplete_tasks(viewer, capsys):
    tasks = []
    viewer.show_tasks_uncompleted(tasks)
    captured = capsys.readouterr()
    assert (
            "üìã –í —Å–ø–∏—Å–∫–µ –Ω–µ—Ç –∑–∞–¥–∞—á. –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –Ω–µ–∑–∞–≤—Ä—à–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É."
            in captured.out
    )
