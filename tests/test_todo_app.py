from unittest.mock import patch

import pytest

from TodoApp import TodoApp


@pytest.fixture
def app():
    return TodoApp()


@patch("builtins.input", side_effect=["4", "5", "6"])
def test_complete_task_with_empty_list(mock_input, app, capsys):
    app.run()
    captured = capsys.readouterr()
    assert "üìã –í —Å–ø–∏—Å–∫–µ –Ω–µ—Ç –∑–∞–¥–∞—á." in captured.out


@patch("builtins.input", side_effect=["1", "–¢–µ—Å—Ç–æ–≤–∞—è", "4", "abc", "6"])
def test_complete_task_invalid_input(mock_input, app, capsys):
    app.run()
    captured = capsys.readouterr()
    assert "‚ùå Error: –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–¥–∞—á–∏!" in captured.out


@patch("builtins.input", side_effect=["1", "–¢–µ—Å—Ç–æ–≤–∞—è", "2", "6"])
def test_show_tasks(mock_input, app, capsys):
    app.run()
    captured = capsys.readouterr()
    assert "–¢–µ—Å—Ç–æ–≤–∞—è" in captured.out
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –ø–æ—è–≤–∏–ª–∞—Å—å –≤ —Å–ø–∏—Å–∫–µ (–ø–æ–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É 25)


@patch("builtins.input", side_effect=["999", "6"])
def test_invalid_choice(mock_input, app, capsys):
    app.run()
    captured = capsys.readouterr()
    assert "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!" in captured.out


@patch("builtins.input", side_effect=["1", "–¢–µ—Å—Ç–æ–≤–∞—è", "4", "1", "5", "6"])
def test_remove_completed_task(mock_input, app, capsys):
    app.run()
    captured = capsys.readouterr()
    assert "üóë –ß–∏—Å—Ç–∏–º —Å–ø–∏—Å–æ–∫..." in captured.out

@patch("builtins.input", side_effect=["1", "–¢–µ—Å—Ç–æ–≤–∞—è", "4", "1", "3", "6"])
def test_invalid_incomplete_list(mock_input, app, capsys):
    app.run()
    captured = capsys.readouterr()
    assert (
            "üìã –í —Å–ø–∏—Å–∫–µ –Ω–µ—Ç –∑–∞–¥–∞—á. –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –Ω–µ–∑–∞–≤—Ä—à–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É."
            in captured.out
    )

@patch("builtins.input", side_effect=["6"])
def test_app_exit(mock_input, app, capsys):
    app.run()
    captured = capsys.readouterr()
    assert "üëã –í—ã—Ö–æ–¥..." in captured.out



