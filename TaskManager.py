from Task import Task


class TaskManager:
    def __init__(self):
        self.tasks = []

    def add(self, title):
        if not title.strip():
            print("Error: –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return
        task = Task(title)
        self.tasks.append(task)

    def get_tasks(self):
        return self.tasks

    def complete_task(self, value):
        if isinstance(value, int):  # –ü–æ –Ω–æ–º–µ—Ä—É
            index = value - 1
            if 0 <= index < len(self.tasks):
                self.tasks[index].mark_completed()
            else:
                print(f"Error: –ó–∞–¥–∞—á–∞ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º '{value}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        elif isinstance(value, str):  # –ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é
            for task in self.tasks:
                if task.title == value:
                    task.mark_completed()
                    return
            print(f"Error: –ó–∞–¥–∞—á–∞ '{value}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

    def remove_completed_tasks(self):
        if not any(task.completed for task in self.tasks):
            print("\nüìã –°–ø–∏—Å–æ–∫ —É–∂–µ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.")
            return
        self.tasks = [task for task in self.tasks if not task.completed]
        print("\nüóë –ß–∏—Å—Ç–∏–º —Å–ø–∏—Å–æ–∫...")
